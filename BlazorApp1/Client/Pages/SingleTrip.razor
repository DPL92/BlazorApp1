
@page "/trip"
@page "/trip/{id:int}"
@inject ITripService TripService

<h3>Fahrten</h3>

@if (Id == null)
{
    <h3>Neue Fahrt anlegen</h3>
}
else
{
      <h3>Fahrt bearbeiten</h3>
}



<EditForm Model = "@trip" OnSubmit="HandleSubmit">

    <div>
        <label for="duration">Dauer</label>
        <InputNumber id="duration" @bind-Value="trip.duration" class="form-control"></InputNumber>
    </div>

     <div>
        <label for="driverLastName">Nachname</label>
        <InputText id="driverLastName" @bind-Value="trip.driver.driverLastName" class="form-control"></InputText>
    </div>


    <div>
        <label for="license">Führerschein</label>
        <InputText id="license" @bind-Value="trip.driver.license" class="form-control"></InputText>
    </div>

   

    

    
    <button type="submit" class=" btn btn-primary">Speichern</button>
     <button type="button" class=" btn btn-danger" @onclick="DeleteTrip"> Löschen </button>

</EditForm>













@code {
    [Parameter]
    public int? Id { get; set; }
    
    Trip trip = new Trip();


    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {



        }

        else
        {


            trip = await TripService.getSingleTrip((int)Id);
        }
    }


    async Task HandleSubmit() {


        if (Id == null)
        {
            await TripService.CreateTrip(trip);

        }

        else
        {
            await TripService.UpdateTrip(trip);

        }

    }

    async Task DeleteTrip() {

        await TripService.DeleteTrip(trip.tripId);
    }



}
